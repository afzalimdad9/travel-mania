import React, { useCallback, useState } from "react";
import Layout from "../layout/index";
import Head from "next/head";
import Image from "next/image";
import BookingConfirmationModal from "../Components/BookingConfirmationModal";
import BookingContact from "../Components/BookingContact";
import { getLocalItem } from "../utils";
import { useFlightContext } from "../context/FlightDataContext";
import { initialContactDetails, initialDetails } from "../Data";
import { useRouter } from "next/router";
import GuestForm from "../Components/GuestForm";
import BenifitCard from "../Components/BenifitCard";
import TripSummary from "../Components/TripSummary";

const Passengerdetails = () => {
  const [show, setShow] = useState(false);
  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);
  const [adultData, setAdultData] = useState(getLocalItem("adult-guests", {}));
  const [childrenData, setChildrenData] = useState(
    getLocalItem("children-guests", {})
  );
  const [mainGuest, setMainGuest] = useState(
    getLocalItem("main-guest", initialDetails)
  );
  const [contactDetails, setContactDetails] = useState(
    getLocalItem("contact-details", initialContactDetails)
  );
  const { setFlightInfo } = useFlightContext();
  const router = useRouter();
  const { children, adults } = router.query;

  const handleMainGuestChange = useCallback(
    function (key, value) {
      setMainGuest((prev) => ({
        ...prev,
        [key]: value,
      }));
      localStorage.setItem(
        "main-guest",
        JSON.stringify({
          ...mainGuest,
          [key]: value,
        })
      );
    },
    [mainGuest]
  );

  const handleAdultGuestChange = useCallback(
    function (uid, key, value) {
      setAdultData((prev) => ({
        ...prev,
        [uid]: {
          ...prev[uid],
          [key]: value,
        },
      }));
      localStorage.setItem(
        "adult-guests",
        JSON.stringify({
          ...adultData,
          [uid]: {
            ...adultData[uid],
            [key]: value,
          },
        })
      );
    },
    [adultData]
  );

  const handleChildrenGuestChange = useCallback(
    function (uid, key, value) {
      setChildrenData((prev) => ({
        ...prev,
        [uid]: {
          ...prev[uid],
          [key]: value,
        },
      }));
      localStorage.setItem(
        "children-guests",
        JSON.stringify({
          ...childrenData,
          [uid]: {
            ...childrenData[uid],
            [key]: value,
          },
        })
      );
    },
    [childrenData]
  );

  const handleChange = useCallback(
    function (e) {
      setContactDetails((prev) => ({
        ...prev,
        [e.target.name]: e.target.value,
      }));
      localStorage.setItem(
        "contact-details",
        JSON.stringify({
          ...contactDetails,
          [e.target.name]: e.target.value,
        })
      );
    },
    [contactDetails]
  );

  function handleCallback() {
    setFlightInfo(router.query);
    localStorage.setItem("flight-info", JSON.stringify(router.query));
  }

  return (
    <>
      <Head>
        <title>Passenger Details</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout noBanner>
        <BookingConfirmationModal
          show={show}
          handleClose={handleClose}
          mainGuest={mainGuest}
          adultData={adultData}
          childrenData={childrenData}
          title="Passengers"
          url={"/seatselection"}
          handleCallback={handleCallback}
        />

        <section className="passenger-details-sec">
          <div className="container">
            <div className="row">
              <div className="col-sm-12 col-md-6">
                <div className="passenger-details-head">
                  <h6>Passenger Details</h6>
                  <p>
                    Please enter names as they appear on passport or travel
                    documentsÂ Tips on adding passenger name
                  </p>
                </div>
              </div>
              <div className="col-md-8 col-sm-12">
                <div className="passenger-detail-mn">
                  <BenifitCard />

                  <GuestForm
                    title={"Passenger 1 (Adult)"}
                    onChange={handleMainGuestChange}
                    type={"adult"}
                    data={mainGuest}
                  />

                  {new Array(adults ? Number(adults || "0") - 1 : undefined)
                    .fill("0")
                    .map((_, key) => (
                      <GuestForm
                        key={key}
                        title={`Passenger ${key + 2} (Adult)`}
                        type={"adult"}
                        data={adultData[key]}
                        onChange={(k, v) => handleAdultGuestChange(key, k, v)}
                      />
                    ))}

                  {new Array(
                    children && children !== "0"
                      ? Number(children || "0") - 1
                      : undefined
                  )
                    .fill("0")
                    .map((_, key) => (
                      <GuestForm
                        key={key}
                        title={`Passenger ${
                          key + (adults ? Number(adults || "1") + 1 : 1)
                        } (Child)`}
                        type={"children"}
                        data={childrenData[key]}
                        onChange={(k, v) =>
                          handleChildrenGuestChange(key, k, v)
                        }
                      />
                    ))}

                  <BookingContact
                    handleChange={handleChange}
                    contactDetails={contactDetails}
                  />

                  <div className="passenger-contact-dtl passenger-detail-inn col-12">
                    <div className="field">
                      <input type="checkbox" name="rembeber" />
                      <label htmlFor="rembeber">
                        Remember the above Passenger details for future
                        bookings.
                      </label>
                    </div>

                    <div className="btn-pessenger-btn">
                      <button
                        type="submit"
                        className="btn10"
                        onClick={handleShow}
                      >
                        Book Now
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div className="col-md-4 col-sm-12">
                <TripSummary />
              </div>
            </div>
          </div>
        </section>
      </Layout>
    </>
  );
};

export default Passengerdetails;
