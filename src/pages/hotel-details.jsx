import Head from "next/head";
import React, { useState } from "react";
import { toast } from "react-toastify";

import HotelDetailMain from "../Components/Safari/HotelDetailMain";
import Layout from "../layout/index";
import HotelBookingForm from "../Components/HotelBookingForm";
import { Accordion, Form } from "react-bootstrap";
import { useHotelContext } from "../context/HotelDataContext";
import HotelRoomsViewer from "../Components/HotelRoomsViewer";
import HotelFacilities from "../Components/HotelFacilities";

const Details = () => {
  const { hotelData } = useHotelContext();
  const [formData, setFormData] = useState({
    checkInDate: null,
    checkoutDate: null,
    persons: {
      adults: 1,
      children: 0,
    },
    rooms: 1,
  });
  const newRooms = hotelData?.Rooms
    ? Object.groupBy(hotelData?.Rooms || {}, (r) =>
        !!r && r.Name && r.Name[0] ? r.Name[0] : ""
      )
    : {};

  const validateForm = () => {
    const { checkInDate, checkoutDate, persons } = formData;
    const totalpersons = Object.values(persons).reduce(
      (acc, val) => acc + val,
      0
    );
    if (!checkInDate) {
      toast.error("Please select a check in date.");
      return false;
    }
    if (!checkoutDate) {
      toast.error("Please select a check out date.");
      return false;
    }
    if (totalpersons === 0) {
      toast.error("Please select at least one person.");
      return false;
    }
    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (validateForm()) {
      try {
      } catch (error) {
        toast.error("Error during hotel search. Please try again.");
        console.error("Error during hotel search:", error);
      }
    }
  };

  return (
    <>
      <Head>
        <title>Amusement</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout noBanner>
        <HotelDetailMain />
        <section className="booking_form-sec details-page">
          <div className="container">
            <Form onSubmit={handleSubmit} className="booking_form-mn">
              <HotelBookingForm formData={formData} setFormData={setFormData} />
              <HotelRoomsViewer rooms={newRooms} />
            </Form>
          </div>
        </section>
        <HotelFacilities facilities={hotelData?.HotelFacilities || []} />
        <AccommodationDetails />
      </Layout>
    </>
  );
};

export default Details;

import { Container, Row, Col, Image, Card, Button } from "react-bootstrap";

const AccommodationDetails = () => {
  const { hotelData } = useHotelContext();
  return (
    <Container>
      <Row className="mb-3">
        <Col md={6}>
          <h4>Location</h4>
          <p
            dangerouslySetInnerHTML={{
              __html: hotelData?.Attractions
                ? Object.values(hotelData?.Attractions)?.[0]
                : "",
            }}
          ></p>
        </Col>
        <Col md={6}>
          <div className="w-100">
            <iframe
              width="100%"
              height="600"
              src={`https://maps.google.com/maps?width=100%25&amp;height=600&amp;hl=en&amp;q=${hotelData?.Address}+(${hotelData?.HotelName})&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed`}
            ></iframe>
          </div>
        </Col>
      </Row>
      <Row className="mb-3">
        <Col md={12}>
          <h4>Description of the accommodation</h4>
          <p
            dangerouslySetInnerHTML={{
              __html: hotelData?.Description || "",
            }}
          ></p>
        </Col>
      </Row>
      <Row>
        <Col md={12}>
          <h4>Checkin and important information</h4>
          <h6 className="mt-3">Check-In</h6>
          <p>
            Checkin time {hotelData?.CheckInTime} - {hotelData?.CheckOutTime}{" "}
            Minimum check-in age: 18
          </p>
          <h6 className="mt-3">Check-Out</h6>
          <p>Checkout time {hotelData?.CheckOutTime}</p>
        </Col>
      </Row>
      <Row>
        <Col md={6}>
          <h4 className="mb-3">Frequently asked questions</h4>
          <Accordion defaultActiveKey="0">
            <Accordion.Item eventKey="0">
              <Accordion.Header>
                What time is check in and check out?
              </Accordion.Header>
              <Accordion.Body>
                Checkin time {hotelData?.CheckInTime}. And Check Out time{" "}
                {hotelData?.CheckOutTime}
              </Accordion.Body>
            </Accordion.Item>
            <Accordion.Item eventKey="1">
              <Accordion.Header>
                Is breakfast included with the stay?
              </Accordion.Header>
              <Accordion.Body>
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("breakfast")
                )
                  ? "Yes"
                  : "No"}
                , Breakfast{" "}
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("breakfast")
                )
                  ? "is"
                  : "is not"}{" "}
                included with stay
              </Accordion.Body>
            </Accordion.Item>
            <Accordion.Item eventKey="2">
              <Accordion.Header>Do you offer free WiFi?</Accordion.Header>
              <Accordion.Body>
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("wifi")
                )
                  ? "Yes"
                  : "No"}
                , we{" "}
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("wifi")
                )
                  ? "offer"
                  : "do not offer"}{" "}
                free wifi.
              </Accordion.Body>
            </Accordion.Item>
            <Accordion.Item eventKey="3">
              <Accordion.Header>
                Reporting available at the hotel?
              </Accordion.Header>
              <Accordion.Body>
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("reporting")
                )
                  ? "Yes"
                  : "No"}
                , Reporing{" "}
                {(hotelData?.HotelFacilities || [])?.some((d) =>
                  d.toLowerCase().includes("reporting")
                )
                  ? "is"
                  : "is not"}{" "}
                available at the hotel.
              </Accordion.Body>
            </Accordion.Item>
            <Accordion.Item eventKey="4">
              <Accordion.Header>Do you have a fitness center?</Accordion.Header>
              <Accordion.Body>
                {(hotelData?.HotelFacilities || [])?.includes(
                  "Fitness facilities"
                )
                  ? "Yes"
                  : "No"}
                , we{" "}
                {(hotelData?.HotelFacilities || [])?.includes(
                  "Fitness facilities"
                )
                  ? ""
                  : "Don't"}{" "}
                a have finess center
              </Accordion.Body>
            </Accordion.Item>
          </Accordion>
        </Col>
      </Row>
      <Row>
        <Col md={6}>
          <h4 className="my-3">Looking for specific information?</h4>
          <h6 className="my-3">Search product info, FAQs, reviews</h6>
          <input
            type="text"
            placeholder="Type a keyword"
            className="w-50 py-3"
          />
        </Col>
      </Row>
      <Row className="my-3">
        <Col md={3}>
          <h6>Want to Suggest something?</h6>
        </Col>
        <Col md={3}>
          <Button variant="outline-primary">Leave feedback</Button>
        </Col>
      </Row>
    </Container>
  );
};
